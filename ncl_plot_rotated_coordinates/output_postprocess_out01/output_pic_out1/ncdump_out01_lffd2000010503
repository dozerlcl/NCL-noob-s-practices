netcdf lffd2000010503 {
dimensions:
	time = UNLIMITED ; // (1 currently)
	bnds = 2 ;
	rlon = 101 ;
	rlat = 111 ;
	srlon = 101 ;
	srlat = 111 ;
	level = 40 ;
	level1 = 41 ;
	soil = 9 ;
	soil1 = 10 ;
	windsector = 16 ;
variables:
	double time(time) ;
		time:standard_name = "time" ;
		time:long_name = "time" ;
		time:units = "seconds since 2000-01-01T00:00:00Z" ;
		time:calendar = "proleptic_gregorian" ;
		time:bounds = "time_bnds" ;
	double time_bnds(time, bnds) ;
		time_bnds:long_name = "time bounds" ;
		time_bnds:units = "seconds since 2000-01-01T00:00:00Z" ;
	char rotated_pole ;
		rotated_pole:long_name = "coordinates of the rotated North Pole" ;
		rotated_pole:grid_mapping_name = "rotated_latitude_longitude" ;
		rotated_pole:grid_north_pole_latitude = 39.25f ;
		rotated_pole:grid_north_pole_longitude = -162.f ;
	float rlon(rlon) ;
		rlon:standard_name = "grid_longitude" ;
		rlon:long_name = "rotated longitude" ;
		rlon:units = "degrees" ;
	float rlat(rlat) ;
		rlat:standard_name = "grid_latitude" ;
		rlat:long_name = "rotated latitude" ;
		rlat:units = "degrees" ;
	float srlon(srlon) ;
		srlon:standard_name = "grid_longitude" ;
		srlon:long_name = "staggered rotated longitude" ;
		srlon:units = "degrees" ;
	float srlat(srlat) ;
		srlat:standard_name = "grid_latitude" ;
		srlat:long_name = "staggered rotated latitude" ;
		srlat:units = "degrees" ;
	float lon(rlat, rlon) ;
		lon:standard_name = "longitude" ;
		lon:long_name = "longitude" ;
		lon:units = "degrees_east" ;
	float lat(rlat, rlon) ;
		lat:standard_name = "latitude" ;
		lat:long_name = "latitude" ;
		lat:units = "degrees_north" ;
	float slonu(rlat, srlon) ;
		slonu:standard_name = "longitude" ;
		slonu:long_name = "staggered U-wind longitude" ;
		slonu:units = "degrees_east" ;
	float slatu(rlat, srlon) ;
		slatu:standard_name = "latitude" ;
		slatu:long_name = "staggered U-wind latitude" ;
		slatu:units = "degrees_north" ;
	float slonv(srlat, rlon) ;
		slonv:standard_name = "longitude" ;
		slonv:long_name = "staggered V-wind longitude" ;
		slonv:units = "degrees_east" ;
	float slatv(srlat, rlon) ;
		slatv:standard_name = "latitude" ;
		slatv:long_name = "staggered V-wind latitude" ;
		slatv:units = "degrees_north" ;
	float vcoord(level1) ;
		vcoord:long_name = "Height-based hybrid Gal-Chen coordinate" ;
		vcoord:units = "Pa" ;
		vcoord:ivctype = 2 ;
		vcoord:irefatm = 2 ;
		vcoord:p0sl = 100000. ;
		vcoord:t0sl = 288.149993896484 ;
		vcoord:dt0lp = 42. ;
		vcoord:vcflat = 11430. ;
		vcoord:delta_t = 75. ;
		vcoord:h_scal = 10000. ;
	float height_2m ;
		height_2m:standard_name = "height" ;
		height_2m:long_name = "height above the surface" ;
		height_2m:units = "m" ;
		height_2m:axis = "Z" ;
		height_2m:positive = "up" ;
	float height_10m ;
		height_10m:standard_name = "height" ;
		height_10m:long_name = "height above the surface" ;
		height_10m:units = "m" ;
		height_10m:axis = "Z" ;
		height_10m:positive = "up" ;
	float height_toa ;
		height_toa:standard_name = "height" ;
		height_toa:long_name = "height of top of model" ;
		height_toa:units = "m" ;
		height_toa:axis = "Z" ;
		height_toa:positive = "up" ;
	float wbtemp_13c ;
		wbtemp_13c:long_name = "wet bulb temperature" ;
		wbtemp_13c:units = "Celsius" ;
		wbtemp_13c:axis = "Z" ;
	float soil1(soil1) ;
		soil1:standard_name = "depth" ;
		soil1:long_name = "depth of soil layers" ;
		soil1:units = "m" ;
		soil1:positive = "down" ;
		soil1:bounds = "soil1_bnds" ;
	float soil1_bnds(soil1, bnds) ;
		soil1_bnds:long_name = "boundaries of soil layers" ;
		soil1_bnds:units = "m" ;
	float windsector(windsector) ;
		windsector:long_name = "wind direction of sectors" ;
		windsector:units = "degrees" ;
		windsector:bounds = "windsector_bnds" ;
	float windsector_bnds(windsector, bnds) ;
		windsector_bnds:long_name = "boundaries of wind sectors" ;
		windsector_bnds:units = "degrees" ;
	float FRESHSNW(time, rlat, rlon) ;
		FRESHSNW:long_name = "freshness of snow" ;
		FRESHSNW:units = "1" ;
		FRESHSNW:grid_mapping = "rotated_pole" ;
		FRESHSNW:_FillValue = -1.e+20f ;
		FRESHSNW:coordinates = "lon lat" ;
	float PP(time, level, rlat, rlon) ;
		PP:standard_name = "difference_of_air_pressure_from_model_reference" ;
		PP:long_name = "deviation from reference pressure" ;
		PP:units = "Pa" ;
		PP:grid_mapping = "rotated_pole" ;
		PP:coordinates = "lon lat" ;
	float QC(time, level, rlat, rlon) ;
		QC:standard_name = "mass_fraction_of_cloud_liquid_water_in_air" ;
		QC:long_name = "specific cloud liquid water content" ;
		QC:units = "kg kg-1" ;
		QC:grid_mapping = "rotated_pole" ;
		QC:coordinates = "lon lat" ;
	float QI(time, level, rlat, rlon) ;
		QI:standard_name = "mass_fraction_of_cloud_ice_in_air" ;
		QI:long_name = "specific cloud ice content" ;
		QI:units = "kg kg-1" ;
		QI:grid_mapping = "rotated_pole" ;
		QI:coordinates = "lon lat" ;
	float QR(time, level, rlat, rlon) ;
		QR:standard_name = "mass_fraction_of_rain_in_air" ;
		QR:long_name = "specific rain content" ;
		QR:units = "kg kg-1" ;
		QR:grid_mapping = "rotated_pole" ;
		QR:coordinates = "lon lat" ;
	float QS(time, level, rlat, rlon) ;
		QS:standard_name = "mass_fraction_of_snow_in_air" ;
		QS:long_name = "specific snow content" ;
		QS:units = "kg kg-1" ;
		QS:grid_mapping = "rotated_pole" ;
		QS:coordinates = "lon lat" ;
	float QV(time, level, rlat, rlon) ;
		QV:standard_name = "specific_humidity" ;
		QV:long_name = "specific humidity" ;
		QV:units = "kg kg-1" ;
		QV:grid_mapping = "rotated_pole" ;
		QV:coordinates = "lon lat" ;
	float QV_S(time, rlat, rlon) ;
		QV_S:standard_name = "surface_specific_humidity" ;
		QV_S:long_name = "surface specific humidity" ;
		QV_S:units = "kg kg-1" ;
		QV_S:grid_mapping = "rotated_pole" ;
		QV_S:coordinates = "lon lat" ;
	float T(time, level, rlat, rlon) ;
		T:standard_name = "air_temperature" ;
		T:long_name = "temperature" ;
		T:units = "K" ;
		T:grid_mapping = "rotated_pole" ;
		T:coordinates = "lon lat" ;
	float T_S(time, rlat, rlon) ;
		T_S:long_name = "soil surface temperature" ;
		T_S:units = "K" ;
		T_S:grid_mapping = "rotated_pole" ;
		T_S:coordinates = "lon lat" ;
	float T_SNOW(time, rlat, rlon) ;
		T_SNOW:standard_name = "surface_temperature_where_snow" ;
		T_SNOW:long_name = "snow surface temperature" ;
		T_SNOW:units = "K" ;
		T_SNOW:grid_mapping = "rotated_pole" ;
		T_SNOW:_FillValue = -1.e+20f ;
		T_SNOW:coordinates = "lon lat" ;
	float T_SO(time, soil1, rlat, rlon) ;
		T_SO:standard_name = "soil_temperature" ;
		T_SO:long_name = "soil temperature" ;
		T_SO:units = "K" ;
		T_SO:grid_mapping = "rotated_pole" ;
		T_SO:_FillValue = -1.e+20f ;
		T_SO:coordinates = "lon lat" ;
		T_SO:cell_methods = "soil1: mean" ;
	float U(time, level, rlat, srlon) ;
		U:standard_name = "grid_eastward_wind" ;
		U:long_name = "U-component of wind" ;
		U:units = "m s-1" ;
		U:grid_mapping = "rotated_pole" ;
		U:coordinates = "slonu slatu" ;
	float V(time, level, srlat, rlon) ;
		V:standard_name = "grid_northward_wind" ;
		V:long_name = "V-component of wind" ;
		V:units = "m s-1" ;
		V:grid_mapping = "rotated_pole" ;
		V:coordinates = "slonv slatv" ;
	float W(time, level1, rlat, rlon) ;
		W:standard_name = "upward_air_velocity" ;
		W:long_name = "vertical wind velocity" ;
		W:units = "m s-1" ;
		W:grid_mapping = "rotated_pole" ;
		W:coordinates = "lon lat" ;
	float W_I(time, rlat, rlon) ;
		W_I:standard_name = "lwe_thickness_of_canopy_water_amount" ;
		W_I:long_name = "canopy water amount" ;
		W_I:units = "m" ;
		W_I:grid_mapping = "rotated_pole" ;
		W_I:_FillValue = -1.e+20f ;
		W_I:coordinates = "lon lat" ;
	float W_SNOW(time, rlat, rlon) ;
		W_SNOW:standard_name = "lwe_thickness_of_surface_snow_amount" ;
		W_SNOW:long_name = "surface snow amount" ;
		W_SNOW:units = "m" ;
		W_SNOW:grid_mapping = "rotated_pole" ;
		W_SNOW:_FillValue = -1.e+20f ;
		W_SNOW:coordinates = "lon lat" ;
	float W_SO(time, soil1, rlat, rlon) ;
		W_SO:standard_name = "lwe_thickness_of_moisture_content_of_soil_layer" ;
		W_SO:long_name = "soil water content" ;
		W_SO:units = "m" ;
		W_SO:grid_mapping = "rotated_pole" ;
		W_SO:_FillValue = -1.e+20f ;
		W_SO:coordinates = "lon lat" ;
		W_SO:cell_methods = "soil1: mean" ;

// global attributes:
		:title = "Europe 0.44 Starter Package" ;
		:source = "/HGST_SATA_8T_3/yycheng/CCLM_starter_test/cclm-sp-v3.1.1/src/cclm/cclm.exe" ;
		:experiment_id = "spcclm" ;
		:realization = 1 ;
		:Conventions = "CF-1.4" ;
		:conventionsURL = "http://www.cfconventions.org/" ;
		:contact = "YourAddress" ;
		:references = "http://www.clm-community.eu/" ;
		:creation_date = "2020-07-22 10:16:08" ;
}
